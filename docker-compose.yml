services:
  mysql:
    container_name: database
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    healthcheck:
      test:  ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=userpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - back_network

  backend:
    container_name: backend-SpringBoot
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - minio
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/coders_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: userpassword
      MINIO_URL: http://minio:9000
      MINIO_ROOT_USER: AhmadEmad
      MINIO_ROOT_PASSWORD: atyponpassword
      EXECUTION_FILE_PATH: /app/code_storage
      DOCKER_HOST: unix:///var/run/docker.sock
    volumes:
      - code_storage:/app/code_storage
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - front_network
      - back_network
      - minio-network

  frontend:
    container_name: frontend-React
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - front_network
      - minio-network
    
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000" 
      - "9001:9001" 
    environment:
      MINIO_ROOT_USER: AhmadEmad
      MINIO_ROOT_PASSWORD: atyponpassword
      MINIO_BUCKET: coders
    volumes:
      - minio_data:/data 
    command: server /data --console-address ":9001"
    networks:
      - minio-network

  minio_setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      mc alias set myminio http://minio:9000 AhmadEmad atyponpassword;
      mc mb myminio/coders || true;
      "
    networks:
      - minio-network

volumes:
  mysql_data:
  minio_data:
  code_storage:

networks:
  front_network:
    driver: bridge

  back_network:
    driver: bridge

  minio-network:
    driver: bridge